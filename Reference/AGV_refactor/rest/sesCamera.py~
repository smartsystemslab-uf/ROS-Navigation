from flask import Flask, jsonify, request
from threading import Thread

import json, pickle, requests, socket, time, traceback, logging
from classDefs import *



app = Flask(__name__)

myIp = (([ip for ip in socket.gethostbyname_ex(socket.gethostname())[2] if not ip.startswith("127.")] or [[(s.connect(("8.8.8.8", 53)), s.getsockname()[0], s.close()) for s in [socket.socket(socket.AF_INET, socket.SOCK_DGRAM)]][0][1]]) + ["no IP found"])[0]

botsList = []		      #List of ALL bots known to the camera
cameraList = []               #List of all other cameras known to this camera
continuePollingBots = True    #CHANGE TO TRUE FOR BOT POLLING TO MAINTAIN ACCURATE LIST OF BOTS


def addBot(botIpInput, botTypeInput, arucoNumberInput):
	wasFound = False
	for bot in botsList:
		if bot.getAddress() == botIpInput:
			wasFound = True
	if wasFound:
		print('Bot already Exists in List')
		return 'ALREADY_INITIALIZED'
	if not wasFound:
		botsList.append(Bot(botIpInput, botTypeInput, 'INITIALIZED', arucoNumberInput))
		wasFound = False
		for bot in botsList:
			if bot.getAddress() == botIpInput:
				wasFound = True
		if wasFound:
			return 'SUCCESS'
		if not wasFound:
			return 'NOT_INITIALIZED'

def pollBots():
	global continuePollingBots
	global botsList
	while(continuePollingBots):
		for bot in botsList:
			url = 'http://' + bot.getAddress() + ':5000/status/'
			print(url)
			try:
				#print(time.clock())
				r = requests.get(url)
				#print(time.clock())
				resp = r.json()
				print(resp)
			except Exception as e:
				print('Removing bot ' + bot.getAddress())
				botsList.remove(bot)
		time.sleep(10)
		
def setThreadRunning(runBool):
	global continuePollingBots
	continuePollingBots = runBool
	if (continuePollingBots):
		pollThread = Thread(target=pollBots, )
		pollThread.setDaemon(True)
		pollThread.start()

setThreadRunning(True)



##ENDPOINTS

@app.route('/', methods=['GET'])
def test():

	return jsonify({'message' : 'It works'})

@app.route('/', methods=['POST'])
def killThreads():
	global continuePollingBots
	global pollThread
	continuePollingBots = False
	print('Threads STOPPED')
	return jsonify([{'threadsStopped' : 'SUCCESS'}])
	

@app.route('/bots/', methods=['POST'])
def newBotIntialize():

	newBotReceived = request.get_json(force=True)
	newAddress = newBotReceived['endPointAddress']
	newType = newBotReceived['botType']
	newAruco = newBotReceived['arucoNumber']
	newType.rstrip('\n')
	return jsonify([{'endPointAddress' : newAddress, 'STATUS' : addBot(newAddress, newType, newAruco)}])
	


if __name__ == '__main__':

	#app.run(debug=True, port=8080)
	app.run(debug=True, host=myIp)
	#app.run(host=myIp)
